#+TITLE: compile 时只保存项目内的文件
#+DATE: 2022-10-30T21:47:34+0800
#+LASTMOD: 2022-10-30T22:09:52+0800
#+AUTHOR: Jiacai Liu
#+LANGUAGE: cn
#+EMAIL: blog@liujiacai.net
#+OPTIONS: toc:nil num:nil
#+STARTUP: content
#+TAGS[]: programming compile

Emacs 中有一个非常好用的 compile 模块，可以非常方便的编译代码、运行测试等。不熟悉的读者可以参考：
[[https://www.masteringemacs.org/article/compiling-running-scripts-emacs][Compiling and running scripts in Emacs - Mastering Emacs]] 。

有一点比较烦人的是，
#+begin_quote
每次执行 compile 时，如果有已经修改，但是还未保存的文件，它都会在 minibuffer 中提示。
#+end_quote

这样做的初衷是可以理解的，如果修改的文件没有保存，编译会用老的文件。问题是，所有未保存的文件都会提示，这就有些过分了，最好是能控制在项目内，之外的文件就不要再提示了。

幸好，compile 模块提供了一个选项用来控制提示那些文件： =compilation-save-buffers-predicate= 。

我定义了如下函数实现上述目的：
#+BEGIN_SRC emacs-lisp
(defun my/file-in-project? ()
  "检查当前 buffer 是否属于当前项目，如果当前目录不属于任何项目，直接返回 `nil'"
  (when-let* ((pr (project-current))
              (root (project-root pr)))
    (string-prefix-p root (file-truename (buffer-file-name)))))


(setq =compilation-save-buffers-predicate 'my/file-in-project?)
#+END_SRC

* 参考
- [[https://superuser.com/questions/799859/suppress-prompt-for-save-file-in-emacs-with-recompile][Suppress prompt for save file in emacs with recompile - Super User]]
